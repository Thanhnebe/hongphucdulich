import React from "react";
import { useLocation } from "react-router-dom";
import { useForm } from "react-hook-form";
import api from "./config/axios";
import { ArrowRightIcon, DotIcon } from "lucide-react";

// Interface cho chuy·∫øn bay
interface IFlight {
    id?: number;
    flight_number: string;
    airline: string;
    departure: string;
    destination: string;
    departure_time: string;
    arrival_time: string;
    price: number;
    status: "Scheduled" | "Delayed" | "Cancelled" | "Completed";
}

interface IBooking {
    passenger_name: string;
    passport_number: string;
    seat_number: string;
    user_id: string;
}

const FlightResults: React.FC = () => {
    const { state } = useLocation();
    const { flights, departure, destination, departureDate } = state || {};
    const { register, handleSubmit, formState: { errors } } = useForm();
    const [selectedFlight, setSelectedFlight] = React.useState<IFlight | null>(null);
    const [totalPrice, setTotalPrice] = React.useState<number>(0);

    // Ch·ªçn chuy·∫øn bay
    const selectFlight = (flight: IFlight) => {
        setSelectedFlight(flight);
        setTotalPrice(flight.price);  // Set gi√° v√© khi ch·ªçn chuy·∫øn bay
    };

    // X·ª≠ l√Ω ƒë·∫∑t v√©
    const handleBooking = async (data: IBooking) => {
        if (!data.passenger_name) {
            alert("Vui l√≤ng nh·∫≠p h·ªç t√™n!");
            return;
        }

        try {
            const response = await api.post("/api/flight/book-flight", {
                ...data,
                flight_number: selectedFlight?.flight_number,
                departure: selectedFlight?.departure,
                destination: selectedFlight?.destination,
                departure_time: selectedFlight?.departure_time,
                price: totalPrice,
            });

            if (response.data.status === "success") {
                alert("ƒê·∫∑t v√© th√†nh c√¥ng!");
                setSelectedFlight(null);
            } else {
                alert("ƒê·∫∑t v√© th·∫•t b·∫°i: " + response.data.message);
            }
        } catch (error) {
            console.error("L·ªói khi ƒë·∫∑t v√©:", error);
            alert("L·ªói khi k·∫øt n·ªëi ƒë·∫øn h·ªá th·ªëng!");
        }
    };
    const formatTime = (timeString: string) => {
        const date = new Date(timeString);
        const hours = date.getHours().toString().padStart(2, '0'); // L·∫•y gi·ªù, th√™m 0 n·∫øu c·∫ßn
        const minutes = date.getMinutes().toString().padStart(2, '0'); // L·∫•y ph√∫t, th√™m 0 n·∫øu c·∫ßn
        return `${hours}:${minutes}`;
    };

    return (
        <div className="max-w-[1290px]  flex  mx-auto p-6 bg-white shadow-lg rounded-lg mt-40">
            <div className="max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-lg ">

            </div>

            {/* Hi·ªÉn th·ªã k·∫øt qu·∫£ t√¨m ki·∫øm */}
            <div className="p-5 bg-white">
                {flights && flights.length > 0 ? (
                    flights.map((flight: IFlight) => (
                        <>
                            <div className="bg-white py-5 rounded-t-lg">
                                <div className="flex justify-between items-center">
                                    {/* Th√¥ng tin ƒêi·ªÉm kh·ªüi h√†nh */}
                                    <div className="flex items-center gap-2">
                                        <h3 className="text-xl font-bold">{flight?.destination}</h3>
                                        <span className="text-sm text-gray-600">{flight.airline}</span>
                                    </div>

                                    {/* M≈©i t√™n gi·ªØa c√°c ƒëi·ªÉm */}
                                    <div className="flex items-center">
                                        <ArrowRightIcon className="text-red-500" size={24} />
                                    </div>

                                    {/* Th√¥ng tin ƒêi·ªÉm ƒë·∫øn */}
                                    <div className="flex items-center gap-2">
                                        <h3 className="text-xl font-bold">{flight.departure}</h3>
                                        <span className="text-sm text-gray-600">{flight.airline}</span>
                                    </div>
                                </div>
                            </div>

                            <div className="mx-auto p-6 bg-white shadow-lg rounded-lg mt-10 max-w-4xl">
                                {/* Chuy·∫øn bay th√¥ng tin */}
                                <div className="flex justify-between items-center py-4 border-b">
                                    <div className="text-lg font-semibold">
                                        <span className="font-bold">{flight?.flight_number}</span>
                                    </div>
                                    <div className="text-xl font-semibold">
                                        {/* Hi·ªÉn th·ªã gi·ªù ƒë·∫øn v√† gi·ªù kh·ªüi h√†nh */}
                                        <span>{formatTime(flight?.arrival_time)}</span>
                                        <span className="text-sm text-gray-500"> ƒê·∫øn </span>
                                        <span>{formatTime(flight?.departure_time)}</span>
                                    </div>
                                    <div className="text-sm text-gray-500">
                                        <span>{flight?.airline}</span>
                                        <span className="mx-2">-</span>
                                        <span className="text-red-500 font-bold">Bay th·∫≥ng</span>
                                    </div>
                                </div>

                                {/* Th√¥ng tin tr·∫°ng th√°i v√© */}
                                <div className="flex justify-between items-center py-4 border-b">
                                    {/* H·∫øt ch·ªó */}
                                    <div className="flex items-center gap-2">
                                        <img src="/static/media/noflight.cee84207.svg" alt="No Flight" className="w-6 h-6" />
                                        <p className="font-bold text-gray-600">{flight.status}</p>
                                    </div>

                                    {/* Gi√° v√© */}
                                    <div className="flex items-center gap-2">
                                        <div>
                                            <p className="font-bold text-xl">{flight.price}</p>
                                            <p className="text-sm text-gray-500">000 VND</p>
                                        </div>
                                        <button
                                            onClick={() => selectFlight(flight)}
                                            className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600"
                                        >
                                            ‚úÖ Ch·ªçn
                                        </button>
                                        <button className="text-red-500 text-xl">
                                            <span>&#10003;</span>
                                        </button>
                                    </div>


                                </div>
                            </div>
                        </>

                    ))
                ) : (
                    <p className="text-gray-500 text-center">Kh√¥ng c√≥ chuy·∫øn bay n√†o ph√π h·ª£p.</p>
                )}
            </div>

            {/* Form ƒë·∫∑t v√© */}
            <div className="max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-lg mt-10">
                {/* Form nh·∫≠p th√¥ng tin ƒë·∫∑t v√© */}
                {selectedFlight && (
                    <div className="p-6 bg-gray-100 rounded-lg shadow-sm">
                        <h3 className="text-lg font-semibold mb-4">üìù Nh·∫≠p th√¥ng tin ƒë·∫∑t v√©</h3>
                        <form onSubmit={handleSubmit(handleBooking)}>
                            {/* H·ªç v√† t√™n */}
                            <div className="mb-4">
                                <label className="block text-sm font-semibold mb-2">H·ªç v√† t√™n</label>
                                <input
                                    type="text"
                                    placeholder="H·ªç v√† t√™n"
                                    {...register("passenger_name", { required: "H·ªç t√™n l√† b·∫Øt bu·ªôc", maxLength: 255 })}
                                    className="w-full p-2 border rounded-md"
                                />
                                {errors.passenger_name && <p className="text-red-500 text-sm">{errors.passenger_name.message}</p>}
                            </div>

                            {/* S·ªë h·ªô chi·∫øu */}
                            <div className="mb-4">
                                <label className="block text-sm font-semibold mb-2">S·ªë h·ªô chi·∫øu (kh√¥ng b·∫Øt bu·ªôc)</label>
                                <input
                                    type="text"
                                    placeholder="S·ªë h·ªô chi·∫øu"
                                    {...register("passport_number", { maxLength: 255 })}
                                    className="w-full p-2 border rounded-md"
                                />
                            </div>

                            {/* S·ªë gh·∫ø */}
                            <div className="mb-4">
                                <label className="block text-sm font-semibold mb-2">S·ªë gh·∫ø</label>
                                <input
                                    type="number"
                                    placeholder="S·ªë gh·∫ø"
                                    {...register("seat_number", { valueAsNumber: true })}
                                    className="w-full p-2 border rounded-md"
                                />
                            </div>

                            {/* Hi·ªÉn th·ªã t·ªïng gi√° v√© */}
                            <div className="mt-2 text-lg font-semibold mb-4">
                                <p>T·ªïng gi√° v√©: {totalPrice.toLocaleString()} VND</p>
                            </div>

                            {/* N√∫t x√°c nh·∫≠n */}
                            <button
                                type="submit"
                                className="w-full bg-green-500 text-white py-2 rounded-lg hover:bg-green-600"
                            >
                                ‚úàÔ∏è X√°c nh·∫≠n
                            </button>
                        </form>
                    </div>
                )}

                {/* Th√¥ng tin chuy·∫øn bay */}
                {selectedFlight && (
                    <div className="mt-6 p-4 bg-white shadow-md rounded-lg">
                        <h3 className="text-xl font-semibold mb-4">Th√¥ng tin chuy·∫øn bay</h3>
                        <div className="mb-4">
                            <p className="font-semibold">Chuy·∫øn bay: {selectedFlight.flight_number}</p>
                            <p><strong>Kh·ªüi h√†nh:</strong> {new Date(selectedFlight.departure_time).toLocaleString()}</p>
                            <p><strong>ƒê·∫øn n∆°i:</strong> {new Date(selectedFlight.arrival_time).toLocaleString()}</p>
                            <p><strong>{selectedFlight.departure} ‚Üí {selectedFlight.destination}</strong></p>
                        </div>
                        <div className="flex justify-between">
                            <div>
                                <p className="text-gray-500"><strong>Tr·∫°ng th√°i:</strong> {selectedFlight.status}</p>
                                <p className="text-gray-500"><strong>Gi√° v√©:</strong> {selectedFlight.price.toLocaleString()} VND</p>
                            </div>
                            <button
                                onClick={() => setSelectedFlight(null)}
                                className="text-red-500 font-bold hover:underline"
                            >
                                H·ªßy ch·ªçn
                            </button>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
};

export default FlightResults;
